@page "/"
@using global::OJCoding.Share.DataModels
@using iOSClub.OJCoding.Account
@using Microsoft.EntityFrameworkCore
@inject AuthenticationStateProvider AuthStateProvider;
@inject IDbContextFactory<OJContext> DbFactory;


<PageTitle>@(IsAuthenticated ? $"{User.Name} : 个人中心" : "主页")</PageTitle>

@if (IsAuthenticated)
{
    <h2>欢迎! @User.Name</h2>
    <Divider/>
    <Row ItemsPerRow="ItemsPerRow.Four" ColSpan="4">
        @foreach (var item in LearnCourseModels)
        {
            <a href="@item">
                <ContextMenuZone>
                    <ContextMenuTrigger>
                        <Card IsCenter="true" IsShadow="true" class="item">
                            <BodyTemplate>
                                
                            </BodyTemplate>
                        </Card>
                    </ContextMenuTrigger>
                </ContextMenuZone>
            </a>
        }
    </Row>
    <Divider/>
    <Row ItemsPerRow="ItemsPerRow.Four" ColSpan="4">
        @foreach (var item in CourseModels)
        {
            <a href="@item">
                <ContextMenuZone>
                    <ContextMenuTrigger>
                        <Card IsCenter="true" IsShadow="true" class="item">
                            <BodyTemplate>
                                
                            </BodyTemplate>
                        </Card>
                    </ContextMenuTrigger>
                </ContextMenuZone>
            </a>
        }
    </Row>
}
else
{
    <h1>WebFile</h1>
    <p>WebFile是一个云文件管理储存系统，您只要注册、登录账号即可</p>
    <p>WebFile可以让用户在云端存储、管理、分享、下载各种类型的文件，如文档、图片、音乐、视频等</p>
    <p>具有高速、安全、稳定、易用的特点，用户可以随时随地访问自己的文件，无需担心文件丢失或损坏</p>
    <p>WebFile还支持多平台、多设备的同步，方便用户在不同的场景下使用WebFile</p>
}

<style>
    .item{
        height: 200px;
        width: 200px;
    }
    h1 {
      font-size: 56px;
      margin-top: 20px;
      margin-bottom: 20px;
      animation: fade-in 1s ease-in-out;
    }
    
    h2 {
      font-size: 48px;
      margin-top: 20px;
      margin-bottom: 20px;
      animation: fade-in 1s ease-in-out;
    }
    
    p {
      font-size: 18px;
    }
</style>

@code
{
    private bool IsAuthenticated;
    private UserModel User { get; set; } = new();
    private List<LearnCourseModel> LearnCourseModels { get; set; } = [];
    private List<CourseModel> CourseModels { get; set; } = [];

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        var claims = (await AuthStateProvider.GetAuthenticationStateAsync()).User;
        var user = claims.ToUser();

        if (user == null)
            return;

        await using var context = await DbFactory.CreateDbContextAsync();
        var userModel = await context.UserModels.Include(x => x.Courses)
            .FirstOrDefaultAsync(x => x.Equals(user));
        if (userModel == null) return;

        IsAuthenticated = true;
        User = user;
        LearnCourseModels = user.Courses;
        CourseModels = await context.CourseModels.ToListAsync();
    }
}